create_secret: true

plane_frontend:
  enabled: true
  url: plane.fancywhale.ca
  image:
    repo: makeplane/plane-frontend
    tag: &plane-version 0.5-dev
  port: 3000
  command:
  - node 
  - apps/app/server.js
  env:
    # Replace with your instance Public IP
    NEXT_PUBLIC_API_BASE_URL: "https://plane.fancywhale.ca"
    NEXT_PUBLIC_GOOGLE_CLIENTID: ""
    NEXT_PUBLIC_GITHUB_APP_NAME: ""
    NEXT_PUBLIC_GITHUB_ID: ""
    NEXT_PUBLIC_SENTRY_DSN: ""
    NEXT_PUBLIC_ENABLE_OAUTH: 0
    NEXT_PUBLIC_ENABLE_SENTRY: 0

plane_backend:
  enabled: true
  url: plane.fancywhale.ca
  command: 
  - ./bin/takeoff
  ingress:
    paths: ["/api"]
  image:
    repo: makeplane/plane-backend
    tag: *plane-version
  port: 8000
  envFromSecret:
  - name: DATABASE_URL
    secretName: postgresql
    key: database-url
  envFromConfigMap:
  - name: REDIS_URL
    configMapName: redis
    key: redis-url
  env:
    DJANGO_SETTINGS_MODULE: "plane.settings.production"
    #: SMPT
    EMAIL_HOST: ""
    EMAIL_HOST_USER: ""
    EMAIL_HOST_PASSWORD: ""
    #: AWS 
    AWS_REGION: ""
    AWS_ACCESS_KEY_ID: ""
    AWS_SECRET_ACCESS_KEY: ""
    AWS_S3_BUCKET_NAME: ""
    #: FE
    WEB_URL: "plane.fancywhale.ca/"
    #: OAUTH
    GITHUB_CLIENT_SECRET: ""
    #: Flags
    DISABLE_COLLECTSTATIC: 1
    DOCKERIZED: 1
    #: GPT Envs
    OPENAI_API_KEY: 0
    GPT_ENGINE: 0

plane_worker:
  enabled: true
  service:
    enabled: false
  ingress:
    enabled: false
  image:
    repo: makeplane/plane-worker
    tag: *plane-version
  command: 
  - ./bin/worker
  envFromSecret:
  - name: DATABASE_URL
    secretName: postgresql
    key: database-url
  envFromConfigMap:
  - name: REDIS_URL
    configMapName: redis
    key: redis-url
  env:
    DJANGO_SETTINGS_MODULE: "plane.settings.production"
    #: SMPT
    EMAIL_HOST: ""
    EMAIL_HOST_USER: ""
    EMAIL_HOST_PASSWORD: ""
    #: AWS 
    AWS_REGION: ""
    AWS_ACCESS_KEY_ID: ""
    AWS_SECRET_ACCESS_KEY: ""
    AWS_S3_BUCKET_NAME: ""
    #: FE
    WEB_URL: "plane.fancywhale.ca/"
    #: OAUTH
    GITHUB_CLIENT_SECRET: ""
    #: Flags
    DISABLE_COLLECTSTATIC: 1
    DOCKERIZED: 1
    #: GPT Envs
    OPENAI_API_KEY: 0
    GPT_ENGINE: 0


redis:
  enabled: true
  auth:
    enabled: false

postgresql:
  enabled: true
  auth:
    database: plane
    username: plane
    existingSecret: postgresql
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: password
      replicationPasswordKey: replication-password